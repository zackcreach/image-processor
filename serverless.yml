service: image-processor

provider:
  name: aws
  runtime: nodejs8.10

  memorySize: 1024 # optional, default is 1024
  timeout: 100 # optional, default is 6

  stage: dev
  region: us-east-1

  role: BucketAccess

  environment:
    BUCKET: "zackcreach-images"
    SLS_DEBUG: "*"
    RESIZE_LAMBDA: ${self:provider.stage}-resizeImage


package:
  individually: true
  # exclude:
  #   - bin/**
  #   - src/**

plugins:
  - serverless-plugin-webpack

functions:
  getImage:
    name: ${self:service}-${self:provider.stage}-getImage
    handler: src/getImage/index.handler
    events:
      - http: GET {proxy+}
    package:
      include:
        - src/getImage/**
  resizeImage:
    name: ${self:provider.environment.RESIZE_LAMBDA}
    handler: src/resizeImage/index.handler
    package:
      include:
        - src/resizeImage/**
  uploadImage:
    name: ${self:service}-${self:provider.stage}-uploadImage
    handler: src/uploadImage/index.handler
    events:
      - http: POST /upload
    package:
      include:
        - src/uploadImage/**



# you can add CloudFormation resource templates here

resources:
  Resources:
    BucketAccess:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:provider.environment.BUCKET}-S3-BUCKET-ACCESS-${self:service}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:provider.environment.BUCKET}-access-bucket-${self:service}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - "s3:*"
                  Resource:
                    -  "Fn::Join": ["", ["arn:aws:s3:::", "${self:provider.environment.BUCKET}/*"]]
                - Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                  Resource:
                    -  "Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":function:${self:provider.environment.RESIZE_LAMBDA}"]]
